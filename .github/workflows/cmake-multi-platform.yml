# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake Qt Project Build - Multiplatform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.

      matrix:
        os: [ubuntu-latest, windows-latest]
        qt_version: [ '5.15.2' ]  						# 定义 Qt 版本
        build_type: [ Release, Debug ]  					# 定义构建类型

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt_version }}  						# 使用矩阵中的 Qt 版本
        # host:    ${{ startsWith(matrix.os, 'win') && 'win' || 'linux' }}		# 根据操作系统设置 host
        host: ${{ (matrix.os == 'macos-latest' && 'mac') || (matrix.os == 'windows-latest' && 'windows') || 'linux' }}  # 根据操作系统设置 host
        target: desktop   								# 指定目标平台（desktop、android、ios）

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{ matrix.build_type }}

